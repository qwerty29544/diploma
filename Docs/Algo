Шаг А. Число всех отрезков, соединяющих вершины многоугольника, будет равно n(n-1)/2. Последовательно рассматриваем эти отрезки и для каждого из них строим наилучший круг по формулам (7.25)-(7.27). 

mu = i*(abs(Z1)^2 * (Z2 - Z3) + abs(Z2)^2 * (Z3 - Z1) + abs(Z3)^2 * (Z1 - Z2))/(2 * Im(Z1 * Conj(Z2) + Z2 * Conj(Z3) + Z3 * Conj(Z1)))

R = sqrt(asb(Z3 - mu)^2)

Если для какого-либо отрезка окажется, что построенный круг содержит весь многоугольник, то это будет искомый круг и алгоритм заканчивается. Если ни один построенный круг не содержит весь многоугольник, то переходим к пункту B.

Шаг В. Искомый круг будет проходить через три вершины многоугольника. Число всех возможных треугольников, построенных на вершинах n-угольника, будет равно n(n-1)(n-2)/6. Искомый круг будет описанным кругом вокруг одного или нескольких треугольников. Последовательно рассматриваем все треугольники и для тех описанных окружностей, которые содержат весь многоугольник и не содержат начало координат, вычисляем углы, под которыми они видны из начала координат. Выбираем круг, который виден под наименьшим углом. 

Алгоритм заканчивается.

=======================================================================================================

1) Считали лямбды из текстового файла
2) Определили количество лябмд
3) Если лямбд 2, то это отрезок, и мы считаем просто круг и центр круга (тут еще надо проверить на начало координат)
4) Если лямбд 3, то это треугольник, и мы считаем уже по 1 и 2 формуле мю и радиус, но не сравниваем, а просто это и есть итерации (тут надо еше проверить на начало координат)
5) Если лямбд больше 3, то


В общем инициализируем Z1, Z2, Z3 по n * (n-1) * (n-2) / 6 элементов.

















=======================================================================================================
Это пометки для себя самого, тут будут планы и пометки по диплому и разработке
План:
1) согрешить
2) властвовать

Первый пункт уже выполнен, потому что он реализован чисто возможностями R, соотвественно вместе с векторизованными функциями и оптимизацией
По-хорошему, все операции должны быть прозрачными, в стиле С/С++

Властвовать - сделать результат работы прозрачным, сделать функцию, такую чтобы возвращалась история:
1) Картинка спектра оператора с кругом и центром
2) Точки центра, радиуса, степени сходимости
3) количество итераций
4) время - не очень показательно
5) История итераций вектора

такой результат необходимо проделать с большим количеством малых примеров, и с одной из задач матфизики, например сверхпроводимость